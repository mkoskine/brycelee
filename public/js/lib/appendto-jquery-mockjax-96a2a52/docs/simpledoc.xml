<?xml version="1.0"?>
<simpledoc xmlns:xi="http://www.w3.org/2001/XInclude">
	<title>jQuery Mockjax Documentation</title>
	<copyright>Â© 2010 appendTo, LLC</copyright>
	<topic name="Introduction">
		<description><![CDATA[Introduction]]></description>
	</topic>
	<topic name="Mockjax">
		<description><![CDATA[Mockjax]]></description>
	</topic>
	
	<component name="Introduction">
		<section name="Introduction">
			<description><![CDATA[Some Introduction Text]]></description>
		</section>
	</component>
	
	<component name="Mockjax">
		<section name="Mockjax">
			<description>A Publish/Subscribe messaging API</description>

			<method name="mockjax">
				<description></description>
				<signature>
					<definition>$.mockjax( [object] options )</definition>
					<description></description>
					<attribute name="options" required="true">
						<description>An object literal which defines the settings to use for the mocked request. See: MockjaxSettings.</description>
					</attribute>
				</signature>
			</method>
			
			<method name="mockjaxClear">
				<description></description>
				<signature>
					<definition>$.mockjaxClear()</definition>
					<description>Removes all mockjax handlers.</description>
				</signature>
			</method>
			
			<method name="mockjaxClear">
				<description></description>
				<signature>
					<definition>$.mockjax( [string] id )</definition>
					<description>Removes a single mockjax handler.</description>
					<attribute name="id" required="true">
						<description>A string which specifies the id of the mockjax handler to remove.</description>
					</attribute>
					<code name="Example Code">
						<block name="" language="javascript">
<![CDATA[
var id = $.mockjax({
   ...
});
$.mockjaxClear(id);
]]>
						</block>
					</code>
				</signature>
			</method>
			
		</section>

		<section name="MockjaxSettings">
			<description>Settings that may passed to each new mockjax handler upon initialization. If a setting is not defined for a particular mock handler, the value as defined in Global Settings will be used.</description>
			<code name="MockjaxSettings Object Literal Definition">
				<block name="" language="javascript"><![CDATA[
{
  url:           [string],
  headers:       [object],
  status:        [integer],
  responseTime:  [integer],
  isTimeout:     [boolean],
  contentType:   [string],
  response:      [function], 
  responseText:  [string|object],
  responseXML:   [string],
  proxy:         [string],
  lastModified:  [date string],
  etag:          [string]
};
				]]></block>
			</code>

			<attribute name="url">
				<description>A string specifying the url of the request that the data should be mocked for. If the url contains an asterisk ( * ), it is treated as a wildcard and the url will attempt to match any request to a url similar to the portion of the url before the asterisk. </description>
			</attribute>
			<attribute name="headers">
				<description>An object literal whos keys will be simulated as additional headers returned from the server for the request.</description>
			</attribute>
			<attribute name="status">
				<description>An integer that specifies a valid server response code. This simulates a server response code.</description>
			</attribute>
			<attribute name="responseTime">
				<description>An integer that specifies a simulated network and server latency (in milliseconds).</description>
			</attribute>
			<attribute name="isTimeout">
				<description>A boolean value that determines whether or not the mock will force a timeout on the request.</description>
			</attribute>
			<attribute name="contentType">
				<description>A string which specifies the content type for the response.</description>
			</attribute>
			<attribute name="response">
				<description>function(settings) {}. A function that allows for the dynamic setting of responseText/responseXML upon each request.</description>
			</attribute>
			<attribute name="responseText">
				<description>A string specifying the mocked text, or a mocked object literal, for the request.</description>
			</attribute>
			<attribute name="responseXML">
				<description>A string specifying the mocked XML for the request.</description>
			</attribute>
			<attribute name="proxy">
				<description>A string specifying a path to a file, from which the contents will be returned for the request.</description>
			</attribute>
			<attribute name="lastModified">
				<description>A date string specifying the mocked last-modified time for the request. This is used by $.ajax to determine if the requested data is new since the last request.</description>
			</attribute>
			<attribute name="etag">
				<description>A string specifying a unique identifier referencing a specific version of the requested data. This is used by $.ajax to determine if the requested data is new since the last request. (see http://en.wikipedia.org/wiki/HTTP_ETag)</description>
			</attribute>
		</section>		
		
		<section name="Global MockjaxSettings">
			<description>
			<![CDATA[
				Global defaults for all Mockjax requests.<br/><br/>
				It's possible to define the global defaults for all Mockjax requests by overwriting the $.mockjaxSettings object. 
				By default the settings are as seen below:
			]]>	
			</description>
			<code name="Default Values">
				<block name="" language="javascript">
<![CDATA[
$.mockjaxSettings = {
  status:        200,
  responseTime:  500,
  isTimeout:     false,
  contentType:   'text/plain',
  response:      '', 
  responseText:  '',
  responseXML:   '',
  proxy:         '',
  lastModified:  null,
  etag:          ''
};
]]>
				</block>
			</code>
			
			<code name="Overwriting a Setting">
				<block name="" language="javascript">
<![CDATA[
$.mockjaxSettings.contentType = 'text/json';
]]>
				</block>
			</code>
		</section>	
		
	</component>
	
</simpledoc>